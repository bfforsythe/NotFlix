<!-- Loop a function that adds continuous images based on how many urls they are
     the urls function as hyperlinks to an image, on click redirect to watchPage, easy. -->
      <%- include('./partials/head.ejs') %>
      <%- include('./partials/carousel.ejs') %>
<style>
    Body {
        background: rgb(45,160,184);
        background: linear-gradient( rgba(45,160,184,1) 2%, rgba(2,0,36,0.7792366946778712) 16%, rgba(9,115,121,1) 92%);
        }
</style>
<head>
    <title>Browsing Page</title>
</head>

<body>
    <% let maxMovies = 100 %>
    <% let videoWidth = 200 %>
    <% let videoHeight = 100 %>
    <div class="center" style="max-width: 1000">
      <%- include('./partials/nav.ejs') %>
      <%- include('./partials/userCheck.ejs') %>
      <center>
      <input type="text" id="search"></input>
      <button type="submit" onclick="searchMovies()"> Search</button>
      <button type="submit" onclick="searchInput.value = ''; searchMovies()"> Clear </button>
      </center>
    <div id="search-results"></div>

    <script>

      var slideshowArr = [];

      function showSlides(n, slideshow) {
        slideshow.currentSlideIndex = n;
        var i;
        var slides = slideshow.getElementsByClassName("mySlides");
        var startIndex = (n - 1) * 4;
        var endIndex = startIndex + 4;
        if (endIndex > slides.length) {
          endIndex = slides.length;
          startIndex = endIndex - 4;
        }
        for (i = 0; i < slides.length; i++) {
          if (i >= startIndex && i < endIndex) {
            slides[i].style.display = "block";
          } else {
            slides[i].style.display = "none";
          }
        }
      }

// function searchMovies()
// -----------------------
// given the title of a "movie" (case insensitve, of any substring)
// returns the entry, clickable to watch the video.
// to retrieve the carousels, clear the box and search again.

var searchInput = document.getElementById("search");

  function searchMovies() {
    var regex = new RegExp("\\b" + searchInput.value + "\\w*\\b", "i"); // regex (boundary + search input + anyword, boundary, case insensitive)
    var slideshowContainers = document.getElementsByClassName("slideshow-container");
    const searchResultsContainer = document.getElementById('search-results');
    while (searchResultsContainer.firstChild) {
      searchResultsContainer.removeChild(searchResultsContainer.firstChild);
    }

    if (searchInput.value !== "") {
      for (var i = 0; i < slideshowContainers.length; i++) {
        slideshowContainers[i].style.display = "none";
      }

      '<% for(i = 0; i < urlData.length; i++){ %>'
        var searchTitles = "<%= urlData[i].title%>".toLowerCase() ;
        if(regex.test(searchTitles) || regex.test("<%=urlData[i].title%>")){
          const searchResult = document.createElement('img');
          searchResult.height = '<%= videoHeight%>';
          searchResult.width = '<%= videoWidth%>';
          var resultString = "https://i.ytimg.com/vi/" + "<%=urlData[i].url%>" + "/maxresdefault.jpg";
          searchResult.src=resultString;
          searchResult.addEventListener('click', function() {
          storeURL('<%= urlData[i].url %>');          });
          searchResultsContainer.appendChild(searchResult);
        }
     '<% } %>'
    } else {
      for (var i = 0; i < slideshowContainers.length; i++) {
        slideshowContainers[i].style.display = "block"; }}};
  

      /* function storeURL
      ------------------------------
        this function takes the url chosen from the browsing page
        and redirects the user to a watch page with the unique URL identifier

      */
      function storeURL(url) {
          localStorage.setItem("retrievedURL", url);
          console.log("URL STORED!", url);
          const newUrl = `/watchPage/${url}`;
          window.location.href = newUrl;
      }

       /*
    function moveSlides
    --------------------
    this is the controller for the arrows.
    on click will move the slides that determined number of slides forward.
  
    */
    function moveSlides(n, slideshow) {
      showSlides(slideshow.currentSlideIndex += n, slideshow);
      console.log("MOVING SLIDES!!!!");
    }
    
    function currentSlide(n, slideshow) {
      showSlides(slideshow.currentSlideIndex = n, slideshow);
    }
    </script>

<!-- Begin Slideshow Containers
            Brandon Forsythe, 2023

      All containers will initialize 100 empty spots to be filled by functions below
      and will display 4 elements at a time, controlled by the arrows on each side of slides.
--> 
  <div>
    <% var currIndex = 0; %>
    <% for (const genre in newMovieGenres) {%>
      <div id="<%= genre %>-slides" class="slideshow-container">
        <p><%= genre %></p>

        <% for (i = 0; i < newMovieGenres[genre].length; i += maxMovies){%>
        <div class="slideshow-group">
          <% for (let j = i; j < i + 100 && j < newMovieGenres[genre].length; j++) { %>
          <script>
          </script>
            <div class="mySlides fade">
              <img height="<%= videoHeight %>px" width="<%= videoWidth %>px" src="https://i.ytimg.com/vi/<%= newMovieGenres[genre][j].url %>/maxresdefault.jpg" onclick="storeURL('<%= newMovieGenres[genre][j].url %>')">
            </div>  
          <% } %>
        <a class="prev" onclick="moveSlides(-1, eval('slideshow' + '<%= currIndex%>'))">❮</a>
        <a class="next" onclick="moveSlides(1, eval('slideshow' + '<%= currIndex%>'))">❯</a>
        <br>
        </div>
      </div>
        <% } %>

      <script>
        {
        var currSlidesIndex = '<%= currIndex%>';
        eval('var slideshow' + '<%= currIndex%>' + ' = document.getElementById("' + '<%= genre %>-slides' + '");');
        slideshowArr.push(document.getElementById("<%= genre %>-slides"));
        eval('var slideshow' + '<%= currIndex%>');
        eval('<%= "slideshow" + currIndex %>' + '.currentSlideIndex = 1;');
        showSlides(eval('<%= "slideshow" + currIndex %>' + '.currentSlideIndex'), eval('slideshow' + currSlidesIndex));
        }
      </script>

      <% currIndex++ %>
    <% } %>
  </div>
</div>
</body>

